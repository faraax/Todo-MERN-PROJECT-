{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","todo","setTodo","list","setToList","fetchData","a","axios","get","data","useEffect","getDataFrmDB","getData","onSubmitForm","e","preventDefault","post","alert","target","children","childNodes","value","addToDB","newList","className","clearList","console","log","deleteTodo","name","parentNode","firstChild","innerText","map","index","delete","_id","err","edit","inp","prompt","id","put","onSubmit","type","onChange","placeholder","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAqHeA,EAjHH,WAEV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,CAAEC,KAAM,KAA3C,mBAAOE,EAAP,KAAaC,EAAb,KAEMC,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,IAAMC,IAAI,6BADjB,uBACRC,EADQ,EACRA,KADQ,kBAETA,GAFS,2CAAH,qDAKfC,qBAAU,YACK,uCAAG,4BAAAJ,EAAA,sEACaD,IADb,OACRM,EADQ,OAEGT,EAAhBS,GAAgD,IAFnC,2CAAH,qDAIbC,KACC,CAACX,IAEJ,IAAMY,EAAY,uCAAG,WAAOC,GAAP,SAAAR,EAAA,6DACnBQ,EAAEC,iBADiB,kBAGOR,IAAMS,KAAK,oCAAqCb,GAHvD,8DAOjBc,MAAM,yBAPW,QASnBH,EAAEI,OAAOC,SAAS,GAAGC,WAAW,GAAGC,MAAQ,GAC3CjB,EAAU,CAAEH,KAAM,KAVC,yDAAH,sDAaZqB,EAAO,uCAAG,WAAOR,GAAP,eAAAR,EAAA,uDACRiB,EADQ,eACOpB,IACbW,EAAEI,OAAOM,WAAaV,EAAEI,OAAOG,MACvCjB,EAAUmB,GAHI,2CAAH,sDAMPE,EAAS,uCAAG,WAAOX,GAAP,SAAAR,EAAA,6DAChBQ,EAAEC,iBADc,kBAGUR,IAAMS,KAAK,wCAHrB,8DAMdU,QAAQC,IAAR,MANc,yDAAH,sDAUTC,EAAU,uCAAG,WAAOd,GAAP,eAAAR,EAAA,sDACjBQ,EAAEC,iBACIc,EAAOf,EAAEI,OAAOY,WAAWC,WAAWC,UAC5C,IACa/B,EACRgC,IAAH,uCAAO,WAAOxB,EAAMyB,GAAb,SAAA5B,EAAA,yDACDG,EAAKR,OAAS4B,EADb,gCAEsBtB,IAAM4B,OAAN,oCAA0C1B,EAAK2B,MAFrE,yDAAP,yDAMA,MAAOC,GACPX,QAAQC,IAAIU,GAZG,2CAAH,sDAgBVC,EAAI,uCAAG,WAAOxB,GAAP,iBAAAR,EAAA,sDACLuB,EAAOf,EAAEI,OAAOY,WAAWC,WAAWC,UACtCO,EAAMC,OAAO,iCAAD,OAAkCX,IACpD5B,EAAKgC,IAAL,uCAAS,WAAOxB,GAAP,eAAAH,EAAA,yDACHG,EAAKR,OAAS4B,EADX,wBAEDY,EAAKhC,EAAK2B,IAFT,kBAIsB7B,IAAMmC,IAAN,oCAAuCD,GAAM,CAAExC,KAAMsC,IAJ3E,8DAOHb,QAAQC,IAAR,MAPG,yDAAT,uDAHW,2CAAH,sDAiBV,OACE,sBAAKH,UAAU,MAAf,UACE,sBAAMmB,SAAU9B,EAAhB,SACE,sBAAKW,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACE,yBACA,yBACA,4BAEF,uBAAOoB,KAAK,OAAOf,KAAK,OAAOL,UAAU,OAAOqB,SAAUvB,EAASwB,YAAY,yBAC/E,wBAAQtB,UAAU,MAAlB,oBACA,wBAAQA,UAAU,MAAMuB,QAAStB,EAAjC,6BAGJ,qBAAKD,UAAU,OAAf,SACE,6BAEIvB,EAAKgC,KAAI,SAACxB,EAAMyB,GAAP,OACP,+BACE,qBAAKV,UAAU,OAAf,SACGf,EAAKR,OAER,wBAAQuB,UAAU,MAAMuB,QAAST,EAAjC,kBACA,wBAAQd,UAAU,MAAMuB,QAASnB,EAAjC,sBALOM,cClGvBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c0a85d24.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './App.css';\n\nconst App = () => {\n\n  const [todo, setTodo] = useState([]);\n  const [list, setToList] = useState({ todo: '' });\n\n  const fetchData = async () => {\n    const { data } = await axios.get('http://localhost:5001/api');\n    return data\n  }\n\n  useEffect(() => {\n    const getData = async () => {\n      const getDataFrmDB = await fetchData();\n      (getDataFrmDB) ? setTodo(getDataFrmDB) : setTodo([])\n    }\n    getData()\n  }, [todo])\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault()\n    try {\n      const addToList = await axios.post('http://localhost:5001/api/addtodo', list)\n      // console.log(addToList)\n    } catch (err) {\n      // console.log('==>', err)\n      alert(\"Please Fill the Input\")\n    }\n    e.target.children[0].childNodes[1].value = ''\n    setToList({ todo: '' })\n  }\n\n  const addToDB = async (e) => {\n    const newList = { ...list }\n    newList[e.target.className] = e.target.value\n    setToList(newList)\n  }\n\n  const clearList = async (e) => {\n    e.preventDefault()\n    try {\n      const deleteAll = await axios.post('http://localhost:5001/api/deleteData');\n      // console.log(deleteAll);\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const deleteTodo = async (e) => {\n    e.preventDefault();\n    const name = e.target.parentNode.firstChild.innerText;\n    try {\n      const id = todo;\n      id.map(async (data, index) => {\n        if (data.todo === name) {\n          const deleteTodo = await axios.delete(`http://localhost:5001/api/${data._id}`);\n          // console.log(deleteTodo)\n        }\n      })\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const edit = async (e) => {\n    const name = e.target.parentNode.firstChild.innerText;\n    const inp = prompt(`Enter the new todo to replace ${name}`)\n    todo.map(async (data) => {\n      if (data.todo === name) {\n        let id = data._id\n        try {\n          const updateData = await axios.put(`http://localhost:5001/api/${id}`, { todo: inp });\n          // console.log(updateData)\n        } catch (err) {\n          console.log(err);\n        }\n      }\n\n    })\n\n  }\n  return (\n    <div className=\"App\">\n      <form onSubmit={onSubmitForm}>\n        <div className=\"header\">\n          <div className=\"lines\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          <input type=\"text\" name=\"todo\" className='todo' onChange={addToDB} placeholder=\"What to todo today ?\" />\n          <button className='btn'>Submit</button>\n          <button className='btn' onClick={clearList}>Clear list</button>\n        </div>\n      </form>\n      <div className=\"form\">\n        <ul>\n          {\n            todo.map((data, index) =>\n              <li key={index}>\n                <div className='list'>\n                  {data.todo}\n                </div>\n                <button className='btn' onClick={edit}>Edit</button>\n                <button className='btn' onClick={deleteTodo}>Delete</button>\n              </li>\n            )\n          }\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}